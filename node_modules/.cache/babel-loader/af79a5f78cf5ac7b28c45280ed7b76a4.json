{"ast":null,"code":"import _defineProperty from \"/Users/ashokkumar.y/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ashokkumar.y/Desktop/todolist/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: localStorage.getItem(\"addedTodoItems\"),\n      todoToShow: \"all\"\n    };\n\n    this.addTodo = todo => {\n      this.setState({\n        todos: [todo, ...this.state.todos]\n      });\n    };\n\n    this.toggleComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id == id) {\n            return _objectSpread({}, todo, {\n              complete: !todo.complete\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.updateTodoToshow = s => {\n      this.setState({\n        todoToShow: s\n      });\n    };\n\n    this.handleDeleteTodo = id => {\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.id !== id)\n      });\n    };\n  }\n\n  // removeAllTodoThatAreComplete = () => {\n  //     this.setState({\n  //         todos: this.state.todos.filter(todo => !todo.complete)\n  //     });\n  // }\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"active\") {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todoToShow === \"complete\") {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    localStorage.setItem(\"addedTodoItems\", todos);\n    console.log(\"this.state.todos\" + JSON.stringify(this.state.todos));\n    console.log(\"local storage\" + localStorage.getItem(\"addedTodoItems\"));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), todos.map(todo => React.createElement(Todo, {\n      key: todo.id,\n      toggleComplete: () => this.toggleComplete(todo.id),\n      onDelete: () => this.handleDeleteTodo(todo.id),\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"todo-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"TODOS LEFT: \", this.state.todos.filter(todo => !todo.complete).length), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"current-status\",\n      onClick: () => this.updateTodoToshow(\"all\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(\"button\", {\n      className: \"current-status\",\n      onClick: () => this.updateTodoToshow(\"active\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"ACTIVE\"), React.createElement(\"button\", {\n      className: \"current-status\",\n      onClick: () => this.updateTodoToshow(\"complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"COMPLETE\")));\n  }\n\n}\n\nconst destination = document.getElementById(\"container\");\nReactDOM.render(React.createElement(TodoList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}), destination);","map":{"version":3,"sources":["/Users/ashokkumar.y/Desktop/todolist/src/index.js"],"names":["React","ReactDOM","TodoForm","Todo","TodoList","Component","state","todos","localStorage","getItem","todoToShow","addTodo","todo","setState","toggleComplete","id","map","complete","updateTodoToshow","s","handleDeleteTodo","filter","render","setItem","console","log","JSON","stringify","length","destination","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  ReactDOM from \"react-dom\";\nimport './index.css'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\n class TodoList extends React.Component{\n    state = {\n        todos : localStorage.getItem(\"addedTodoItems\"),\n        todoToShow: \"all\"\n    }\n\n    addTodo = todo => {\n        this.setState({\n            todos : [todo , ...this.state.todos]\n        })\n\n\n    }\n\n    toggleComplete = id => {\n         this.setState({\n             todos:this.state.todos.map( todo => {\n                 if(todo.id ==id){\n                     return {\n                         ...todo,\n                         complete: !todo.complete\n                     }\n                 }\n                 else{\n                     return todo;\n                 }\n             })\n         })\n    }\n\n    updateTodoToshow = (s) => {\n        this.setState({\n            todoToShow: s\n        })\n    };\n handleDeleteTodo = (id) => {\n     this.setState({\n         todos: this.state.todos.filter(todo => todo.id !== id)\n     });\n };\n     // removeAllTodoThatAreComplete = () => {\n     //     this.setState({\n     //         todos: this.state.todos.filter(todo => !todo.complete)\n     //     });\n    // }\n    render(){\n        let todos = [];\n\n        if(this.state.todoToShow === \"all\"){\n            todos = this.state.todos;\n\n        }else if(this.state.todoToShow === \"active\"){\n            todos = this.state.todos.filter(todo => !todo.complete);\n        }else if(this.state.todoToShow === \"complete\"){\n            todos = this.state.todos.filter(todo => todo.complete);\n        }\n        localStorage.setItem(\"addedTodoItems\",todos);\n        console.log(\"this.state.todos\"+JSON.stringify(this.state.todos));\n        console.log(\"local storage\"+localStorage.getItem(\"addedTodoItems\"));\n        return(\n            <div>\n                <TodoForm onSubmit={this.addTodo}/>\n                {todos.map(\n                    todo => (\n                        <Todo key={todo.id}\n                              toggleComplete={() => this.toggleComplete(todo.id)}\n                              onDelete = { () => this.handleDeleteTodo(todo.id)}\n                              todo={todo} />\n\n                    )\n                )}\n                <div className=\"todo-left\">\n                    TODOS LEFT: {this.state.todos.filter(todo => !todo.complete).length}\n                </div>\n                <div>\n                    <button  className=\"current-status\" onClick={() => this.updateTodoToshow(\"all\")} >ALL</button>\n                    <button  className=\"current-status\" onClick={() => this.updateTodoToshow(\"active\")}>ACTIVE</button>\n                    <button className=\"current-status\" onClick={() => this.updateTodoToshow(\"complete\")}>COMPLETE</button>\n                </div>\n                {/*{this.state.todos.some(todo => todo.complete)?*/}\n                {/*( <div>*/}\n                    {/*<button onClick={this.removeAllTodoThatAreComplete}>*/}\n                        {/*remove all complete todos*/}\n                    {/*</button>*/}\n                {/*</div>) : null}*/}\n            </div>\n        );\n    }\n}\nconst destination = document.getElementById(\"container\");\nReactDOM.render(<TodoList />,destination);\n\n"]},"metadata":{},"sourceType":"module"}