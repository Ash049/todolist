{"ast":null,"code":"import _defineProperty from \"/Users/ashokkumar.y/Desktop/todolist/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ashokkumar.y/Desktop/todolist/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoToShow: \"all\"\n    };\n\n    this.addTodo = todo => {\n      this.setState({\n        todos: [todo, ...this.state.todos]\n      });\n    };\n\n    this.toggleComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id == id) {\n            return _objectSpread({}, todo, {\n              complete: !todo.complete\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.updateTodoToshow = s => {\n      let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?' + s;\n      window.history.pushState({\n        path: newurl\n      }, '', newurl);\n      this.setState({\n        todoToShow: s\n      });\n    };\n\n    this.handleDeleteTodo = id => {\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.id !== id)\n      });\n    };\n  }\n\n  componentDidMount() {\n    let toShow = window.location.href.split(\"?\");\n\n    if (toShow.length > 1) {\n      this.setState({\n        todoToShow: toShow[1]\n      });\n    }\n\n    localStorage.getItem(\"todoItems\") && this.setState({\n      todos: JSON.parse(localStorage.getItem(\"todoItems\"))\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem(\"todoItems\", JSON.stringify(nextState.todos));\n    localStorage.setItem(\"todoToShow\", nextState.todoToShow);\n  }\n\n  render() {\n    console.log(\"localStorage\" + localStorage.getItem(\"todoToShow\"));\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"active\") {\n      console.log(\"clicked on active\");\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todoToShow === \"complete\") {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), todos.map(todo => React.createElement(Todo, {\n      key: todo.id,\n      toggleComplete: () => this.toggleComplete(todo.id),\n      onDelete: () => this.handleDeleteTodo(todo.id),\n      todo: todo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"todos left: \", this.state.todos.filter(todo => !todo.complete).length), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.updateTodoToshow(\"all\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"all\"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToshow(\"active\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"active\"), React.createElement(\"button\", {\n      onClick: () => this.updateTodoToshow(\"complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"complete\")));\n  }\n\n}\n\nconst destination = document.getElementById(\"container\");\nReactDOM.render(React.createElement(TodoList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}), destination);","map":{"version":3,"sources":["/Users/ashokkumar.y/Desktop/todolist/src/index.js"],"names":["React","ReactDOM","TodoForm","Todo","TodoList","Component","state","todos","todoToShow","addTodo","todo","setState","toggleComplete","id","map","complete","updateTodoToshow","s","newurl","window","location","protocol","host","pathname","history","pushState","path","handleDeleteTodo","filter","componentDidMount","toShow","href","split","length","localStorage","getItem","JSON","parse","componentWillUpdate","nextProps","nextState","setItem","stringify","render","console","log","destination","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport  ReactDOM from \"react-dom\";\nimport './index.css'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\n class TodoList extends React.Component{\n    state = {\n        todos : [],\n        todoToShow: \"all\"\n    }\n\n    addTodo = todo => {\n        this.setState({\n            todos : [todo , ...this.state.todos]\n        })\n\n\n    }\n\n    toggleComplete = id => {\n         this.setState({\n             todos:this.state.todos.map( todo => {\n                 if(todo.id ==id){\n                     return {\n                         ...todo,\n                         complete: !todo.complete\n                     }\n                 }\n                 else{\n                     return todo;\n                 }\n             })\n         })\n    }\n\n    updateTodoToshow = (s) => {\n    let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?'+s;\n    window.history.pushState({ path: newurl }, '', newurl);\n        this.setState({\n            todoToShow: s\n        })\n    };\n handleDeleteTodo = (id) => {\n     this.setState({\n         todos: this.state.todos.filter(todo => todo.id !== id)\n     });\n };\ncomponentDidMount(){\nlet toShow =window.location.href.split(\"?\");\nif(toShow.length >1){\n    this.setState({\n        todoToShow: toShow[1]\n    })\n}\n\n    localStorage.getItem(\"todoItems\") && this.setState({\n        todos: JSON.parse(localStorage.getItem(\"todoItems\"))\n\n    });\n};\n\ncomponentWillUpdate(nextProps,nextState){\n    localStorage.setItem(\"todoItems\",JSON.stringify(nextState.todos));\n    localStorage.setItem(\"todoToShow\",nextState.todoToShow);\n\n};\n    render(){\n\n        console.log(\"localStorage\"+localStorage.getItem(\"todoToShow\"));\n        let todos = [];\n        if(this.state.todoToShow === \"all\"){\n            todos = this.state.todos;\n\n        }else if(this.state.todoToShow === \"active\"){\n            console.log(\"clicked on active\");\n            todos = this.state.todos.filter(todo => !todo.complete);\n        }else if(this.state.todoToShow === \"complete\"){\n            todos = this.state.todos.filter(todo => todo.complete);\n        }\n        return(\n            <div>\n                <TodoForm onSubmit={this.addTodo}/>\n                {todos.map(\n                    todo => (\n                        <Todo key={todo.id}\n                              toggleComplete={() => this.toggleComplete(todo.id)}\n                              onDelete = { () => this.handleDeleteTodo(todo.id)}\n                              todo={todo} />\n\n                    )\n                )}\n                <div>\n                    todos left: {this.state.todos.filter(todo => !todo.complete).length}\n                </div>\n                <div>\n                    <button onClick={() => this.updateTodoToshow(\"all\")} >all</button>\n                    <button onClick={() => this.updateTodoToshow(\"active\")}>active</button>\n                    <button onClick={() => this.updateTodoToshow(\"complete\")}>complete</button>\n                </div>\n            </div>\n        );\n    }\n}\nconst destination = document.getElementById(\"container\");\nReactDOM.render(<TodoList />,destination);\n\n"]},"metadata":{},"sourceType":"module"}